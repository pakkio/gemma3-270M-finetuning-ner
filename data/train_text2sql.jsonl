{"question": "Mostrami tutti i clienti di Milano", "sql": "SELECT * FROM clienti WHERE citta = 'Milano';"}
{"question": "Quali sono i prodotti con prezzo superiore a 100 euro?", "sql": "SELECT * FROM prodotti WHERE prezzo > 100;"}
{"question": "Conta quanti ordini sono stati effettuati nel 2024", "sql": "SELECT COUNT(*) FROM ordini WHERE YEAR(data_ordine) = 2024;"}
{"question": "Trova i dipendenti del dipartimento vendite", "sql": "SELECT * FROM dipendenti WHERE dipartimento = 'vendite';"}
{"question": "Elenca tutti i prodotti della categoria elettronica", "sql": "SELECT * FROM prodotti WHERE categoria = 'elettronica';"}
{"question": "Mostra i clienti con email contenente 'gmail'", "sql": "SELECT * FROM clienti WHERE email LIKE '%gmail%';"}
{"question": "Quali ordini hanno un totale maggiore di 500 euro?", "sql": "SELECT * FROM ordini WHERE totale > 500;"}
{"question": "Trova i prodotti con giacenza inferiore a 10 pezzi", "sql": "SELECT * FROM prodotti WHERE giacenza < 10;"}
{"question": "Mostra tutti i clienti della regione Lombardia", "sql": "SELECT * FROM clienti WHERE regione = 'Lombardia';"}
{"question": "Elenca i fornitori con valutazione superiore a 4", "sql": "SELECT * FROM fornitori WHERE valutazione > 4;"}
{"question": "Conta i clienti per ogni città", "sql": "SELECT citta, COUNT(*) as numero_clienti FROM clienti GROUP BY citta;"}
{"question": "Mostra il prezzo medio dei prodotti per categoria", "sql": "SELECT categoria, AVG(prezzo) as prezzo_medio FROM prodotti GROUP BY categoria;"}
{"question": "Trova gli ordini spediti ma non ancora consegnati", "sql": "SELECT * FROM ordini WHERE stato = 'spedito';"}
{"question": "Quali sono i 5 prodotti più costosi?", "sql": "SELECT * FROM prodotti ORDER BY prezzo DESC LIMIT 5;"}
{"question": "Mostra i clienti registrati nell'ultimo mese", "sql": "SELECT * FROM clienti WHERE data_registrazione >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"}
{"question": "Trova i dipendenti con stipendio tra 30000 e 50000 euro", "sql": "SELECT * FROM dipendenti WHERE stipendio BETWEEN 30000 AND 50000;"}
{"question": "Elenca i prodotti senza giacenza", "sql": "SELECT * FROM prodotti WHERE giacenza = 0;"}
{"question": "Mostra il fatturato totale per mese nel 2024", "sql": "SELECT MONTH(data_ordine) as mese, SUM(totale) as fatturato FROM ordini WHERE YEAR(data_ordine) = 2024 GROUP BY MONTH(data_ordine);"}
{"question": "Trova i clienti che non hanno mai fatto ordini", "sql": "SELECT c.* FROM clienti c LEFT JOIN ordini o ON c.id_cliente = o.id_cliente WHERE o.id_cliente IS NULL;"}
{"question": "Quali prodotti hanno ricevuto recensioni con valutazione 5?", "sql": "SELECT DISTINCT p.* FROM prodotti p JOIN recensioni r ON p.id_prodotto = r.id_prodotto WHERE r.valutazione = 5;"}
{"question": "Mostra il numero di ordini per ogni cliente", "sql": "SELECT c.nome, c.cognome, COUNT(o.id_ordine) as numero_ordini FROM clienti c LEFT JOIN ordini o ON c.id_cliente = o.id_cliente GROUP BY c.id_cliente, c.nome, c.cognome;"}
{"question": "Trova i prodotti mai ordinati", "sql": "SELECT p.* FROM prodotti p LEFT JOIN dettagli_ordine d ON p.id_prodotto = d.id_prodotto WHERE d.id_prodotto IS NULL;"}
{"question": "Mostra la spesa media per cliente", "sql": "SELECT c.nome, c.cognome, AVG(o.totale) as spesa_media FROM clienti c JOIN ordini o ON c.id_cliente = o.id_cliente GROUP BY c.id_cliente, c.nome, c.cognome;"}
{"question": "Elenca i manager con più di 3 dipendenti", "sql": "SELECT m.nome, m.cognome, COUNT(d.id_dipendente) as numero_dipendenti FROM dipendenti m JOIN dipendenti d ON m.id_dipendente = d.manager_id GROUP BY m.id_dipendente, m.nome, m.cognome HAVING COUNT(d.id_dipendente) > 3;"}
{"question": "Trova i clienti di Roma con ordini superiori a 1000 euro", "sql": "SELECT DISTINCT c.* FROM clienti c JOIN ordini o ON c.id_cliente = o.id_cliente WHERE c.citta = 'Roma' AND o.totale > 1000;"}
{"question": "Mostra i prodotti con il maggior numero di recensioni", "sql": "SELECT p.nome, COUNT(r.id_recensione) as numero_recensioni FROM prodotti p LEFT JOIN recensioni r ON p.id_prodotto = r.id_prodotto GROUP BY p.id_prodotto, p.nome ORDER BY numero_recensioni DESC LIMIT 10;"}
{"question": "Quali sono gli ordini annullati nel 2024?", "sql": "SELECT * FROM ordini WHERE stato = 'annullato' AND YEAR(data_ordine) = 2024;"}
{"question": "Trova i fornitori del settore tecnologia", "sql": "SELECT * FROM fornitori WHERE settore = 'tecnologia';"}
{"question": "Mostra i clienti azienda della Lombardia", "sql": "SELECT * FROM clienti WHERE tipo_cliente = 'azienda' AND regione = 'Lombardia';"}
{"question": "Elenca i prodotti con sconto attivo", "sql": "SELECT DISTINCT p.* FROM prodotti p JOIN promozioni pr ON p.categoria = pr.categoria_prodotti WHERE pr.stato = 'attiva' AND CURDATE() BETWEEN pr.data_inizio AND pr.data_fine;"}
{"question": "Conta le fatture pagate per ogni mese", "sql": "SELECT MONTH(data_pagamento) as mese, COUNT(*) as fatture_pagate FROM fatture WHERE stato = 'pagata' AND YEAR(data_pagamento) = 2024 GROUP BY MONTH(data_pagamento);"}
{"question": "Trova i dipendenti assunti negli ultimi 6 mesi", "sql": "SELECT * FROM dipendenti WHERE data_assunzione >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"}
{"question": "Mostra i prodotti della sottocategoria smartphone", "sql": "SELECT * FROM prodotti WHERE sottocategoria = 'smartphone';"}
{"question": "Quali clienti hanno speso più di 5000 euro in totale?", "sql": "SELECT c.nome, c.cognome, SUM(o.totale) as spesa_totale FROM clienti c JOIN ordini o ON c.id_cliente = o.id_cliente GROUP BY c.id_cliente, c.nome, c.cognome HAVING SUM(o.totale) > 5000;"}
{"question": "Trova i movimenti di magazzino dell'ultimo mese", "sql": "SELECT * FROM magazzino WHERE data_movimento >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"}
{"question": "Mostra i clienti con telefono cellulare (che inizia con 3)", "sql": "SELECT * FROM clienti WHERE telefono LIKE '3%';"}
{"question": "Elenca i prodotti discontinui", "sql": "SELECT * FROM prodotti WHERE stato = 'discontinuo';"}
{"question": "Trova le fatture scadute", "sql": "SELECT * FROM fatture WHERE stato = 'scaduta' OR (data_scadenza < CURDATE() AND stato != 'pagata');"}
{"question": "Mostra il valore medio degli ordini per regione", "sql": "SELECT c.regione, AVG(o.totale) as valore_medio FROM clienti c JOIN ordini o ON c.id_cliente = o.id_cliente GROUP BY c.regione;"}
{"question": "Quali prodotti hanno un margine superiore al 50%?", "sql": "SELECT *, ((prezzo - costo) / costo * 100) as margine FROM prodotti WHERE ((prezzo - costo) / costo * 100) > 50;"}
{"question": "Trova i clienti nati negli anni '80", "sql": "SELECT * FROM clienti WHERE YEAR(data_nascita) BETWEEN 1980 AND 1989;"}
{"question": "Mostra gli ordini con spedizione gratuita", "sql": "SELECT * FROM ordini WHERE spese_spedizione = 0;"}
{"question": "Elenca i dipendenti del Piemonte", "sql": "SELECT * FROM dipendenti WHERE citta IN (SELECT DISTINCT citta FROM clienti WHERE regione = 'Piemonte');"}
{"question": "Trova i prodotti con più di 50 pezzi in giacenza", "sql": "SELECT * FROM prodotti WHERE giacenza > 50;"}
{"question": "Mostra i fornitori con partnership da più di 5 anni", "sql": "SELECT * FROM fornitori WHERE data_partnership <= DATE_SUB(CURDATE(), INTERVAL 5 YEAR);"}
{"question": "Quali sono i metodi di pagamento più usati?", "sql": "SELECT metodo_pagamento, COUNT(*) as utilizzi FROM ordini GROUP BY metodo_pagamento ORDER BY utilizzi DESC;"}
{"question": "Trova i clienti con CAP di Milano (20xxx)", "sql": "SELECT * FROM clienti WHERE cap LIKE '20%';"}
{"question": "Mostra le promozioni attive questo mese", "sql": "SELECT * FROM promozioni WHERE stato = 'attiva' AND CURDATE() BETWEEN data_inizio AND data_fine AND MONTH(data_inizio) <= MONTH(CURDATE()) AND MONTH(data_fine) >= MONTH(CURDATE());"}
{"question": "Elenca i prodotti con recensioni verificate", "sql": "SELECT DISTINCT p.* FROM prodotti p JOIN recensioni r ON p.id_prodotto = r.id_prodotto WHERE r.verificata = TRUE;"}
{"question": "Trova gli ordini consegnati in ritardo", "sql": "SELECT * FROM ordini WHERE data_consegna > DATE_ADD(data_ordine, INTERVAL 7 DAY);"}
{"question": "Mostra i dipendenti senza manager", "sql": "SELECT * FROM dipendenti WHERE manager_id IS NULL;"}
{"question": "Quali clienti hanno fatto più di 10 ordini?", "sql": "SELECT c.nome, c.cognome, COUNT(o.id_ordine) as numero_ordini FROM clienti c JOIN ordini o ON c.id_cliente = o.id_cliente GROUP BY c.id_cliente, c.nome, c.cognome HAVING COUNT(o.id_ordine) > 10;"}
{"question": "Trova i prodotti con valutazione media superiore a 4", "sql": "SELECT p.nome, AVG(r.valutazione) as valutazione_media FROM prodotti p JOIN recensioni r ON p.id_prodotto = r.id_prodotto GROUP BY p.id_prodotto, p.nome HAVING AVG(r.valutazione) > 4;"}
{"question": "Mostra le vendite per categoria nel 2024", "sql": "SELECT p.categoria, SUM(d.subtotale) as vendite FROM prodotti p JOIN dettagli_ordine d ON p.id_prodotto = d.id_prodotto JOIN ordini o ON d.id_ordine = o.id_ordine WHERE YEAR(o.data_ordine) = 2024 GROUP BY p.categoria;"}
{"question": "Elenca i clienti inattivi", "sql": "SELECT * FROM clienti WHERE stato = 'inattivo';"}
{"question": "Trova i dipendenti con lo stesso nome", "sql": "SELECT nome, COUNT(*) as occorrenze FROM dipendenti GROUP BY nome HAVING COUNT(*) > 1;"}
{"question": "Mostra gli ordini pagati con PayPal", "sql": "SELECT * FROM ordini WHERE metodo_pagamento = 'paypal';"}
{"question": "Quali prodotti costano meno di 20 euro?", "sql": "SELECT * FROM prodotti WHERE prezzo < 20;"}
{"question": "Trova i clienti con email aziendale (.it)", "sql": "SELECT * FROM clienti WHERE email LIKE '%.it';"}
{"question": "Mostra il totale delle spese di spedizione per mese", "sql": "SELECT MONTH(data_ordine) as mese, SUM(spese_spedizione) as totale_spedizioni FROM ordini WHERE YEAR(data_ordine) = 2024 GROUP BY MONTH(data_ordine);"}
{"question": "Elenca i prodotti della categoria casa ordinati per prezzo", "sql": "SELECT * FROM prodotti WHERE categoria = 'casa' ORDER BY prezzo ASC;"}
{"question": "Trova le fatture emesse ma non pagate", "sql": "SELECT * FROM fatture WHERE stato = 'emessa';"}
{"question": "Mostra i clienti della Sicilia", "sql": "SELECT * FROM clienti WHERE regione = 'Sicilia';"}
{"question": "Quali ordini sono stati rimborsati?", "sql": "SELECT * FROM ordini WHERE stato = 'rimborsato';"}
{"question": "Trova i prodotti con descrizione che contiene 'wireless'", "sql": "SELECT * FROM prodotti WHERE descrizione LIKE '%wireless%';"}
{"question": "Mostra il numero di dipendenti per dipartimento", "sql": "SELECT dipartimento, COUNT(*) as numero_dipendenti FROM dipendenti WHERE stato = 'attivo' GROUP BY dipartimento;"}
{"question": "Elenca gli ordini del cliente Mario Rossi", "sql": "SELECT o.* FROM ordini o JOIN clienti c ON o.id_cliente = c.id_cliente WHERE c.nome = 'Mario' AND c.cognome = 'Rossi';"}
{"question": "Trova i prodotti aggiunti nell'ultimo trimestre", "sql": "SELECT * FROM prodotti WHERE data_inserimento >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH);"}
{"question": "Mostra i fornitori italiani", "sql": "SELECT * FROM fornitori WHERE paese = 'Italia';"}
{"question": "Quali sono i prodotti più venduti?", "sql": "SELECT p.nome, SUM(d.quantita) as quantita_venduta FROM prodotti p JOIN dettagli_ordine d ON p.id_prodotto = d.id_prodotto GROUP BY p.id_prodotto, p.nome ORDER BY quantita_venduta DESC LIMIT 10;"}
{"question": "Trova gli ordini consegnati oggi", "sql": "SELECT * FROM ordini WHERE data_consegna = CURDATE();"}
{"question": "Mostra i clienti con indirizzo contenente 'Via'", "sql": "SELECT * FROM clienti WHERE indirizzo LIKE '%Via%';"}
{"question": "Elenca le promozioni scadute", "sql": "SELECT * FROM promozioni WHERE data_fine < CURDATE();"}
{"question": "Trova i dipendenti manager", "sql": "SELECT DISTINCT d1.* FROM dipendenti d1 JOIN dipendenti d2 ON d1.id_dipendente = d2.manager_id;"}
{"question": "Mostra gli ordini con note speciali", "sql": "SELECT * FROM ordini WHERE note IS NOT NULL AND note != '';"}
{"question": "Quali clienti hanno fatto ordini nel weekend?", "sql": "SELECT DISTINCT c.* FROM clienti c JOIN ordini o ON c.id_cliente = o.id_cliente WHERE DAYOFWEEK(o.data_ordine) IN (1, 7);"}
{"question": "Trova i prodotti con nome che inizia con 'iPhone'", "sql": "SELECT * FROM prodotti WHERE nome LIKE 'iPhone%';"}
{"question": "Mostra le recensioni negative (valutazione 1 o 2)", "sql": "SELECT * FROM recensioni WHERE valutazione <= 2;"}
{"question": "Elenca i dipendenti del dipartimento amministrazione", "sql": "SELECT * FROM dipendenti WHERE dipartimento = 'amministrazione';"}
{"question": "Trova gli ordini con totale esatto di 100 euro", "sql": "SELECT * FROM ordini WHERE totale = 100;"}
{"question": "Mostra i clienti privati di Napoli", "sql": "SELECT * FROM clienti WHERE tipo_cliente = 'privato' AND citta = 'Napoli';"}
{"question": "Quali prodotti hanno giacenza compresa tra 10 e 50?", "sql": "SELECT * FROM prodotti WHERE giacenza BETWEEN 10 AND 50;"}
{"question": "Trova le fatture con IVA superiore a 100 euro", "sql": "SELECT * FROM fatture WHERE iva > 100;"}
{"question": "Mostra gli ordini spediti a Torino", "sql": "SELECT * FROM ordini WHERE citta_consegna = 'Torino';"}
{"question": "Elenca i clienti registrati quest'anno", "sql": "SELECT * FROM clienti WHERE YEAR(data_registrazione) = YEAR(CURDATE());"}
{"question": "Trova i movimenti di magazzino di tipo uscita", "sql": "SELECT * FROM magazzino WHERE tipo_movimento = 'uscita';"}
{"question": "Mostra i fornitori con valutazione non disponibile", "sql": "SELECT * FROM fornitori WHERE valutazione IS NULL;"}
{"question": "Quali sono gli ordini in elaborazione?", "sql": "SELECT * FROM ordini WHERE stato = 'in_elaborazione';"}
{"question": "Trova i prodotti della categoria sport ordinati per giacenza", "sql": "SELECT * FROM prodotti WHERE categoria = 'sport' ORDER BY giacenza DESC;"}
{"question": "Mostra i clienti con telefono fisso (che inizia con 0)", "sql": "SELECT * FROM clienti WHERE telefono LIKE '0%';"}
{"question": "Elenca i dipendenti licenziati", "sql": "SELECT * FROM dipendenti WHERE stato = 'licenziato';"}
{"question": "Trova gli ordini con spese di spedizione superiori a 20 euro", "sql": "SELECT * FROM ordini WHERE spese_spedizione > 20;"}
{"question": "Mostra le recensioni pubblicate questo mese", "sql": "SELECT * FROM recensioni WHERE MONTH(data_recensione) = MONTH(CURDATE()) AND YEAR(data_recensione) = YEAR(CURDATE());"}
{"question": "Quali prodotti hanno prezzo uguale al costo?", "sql": "SELECT * FROM prodotti WHERE prezzo = costo;"}
{"question": "Trova i clienti della Campania", "sql": "SELECT * FROM clienti WHERE regione = 'Campania';"}
{"question": "Mostra gli ordini pagati in contrassegno", "sql": "SELECT * FROM ordini WHERE metodo_pagamento = 'contrassegno';"}
{"question": "Elenca i prodotti esauriti", "sql": "SELECT * FROM prodotti WHERE stato = 'esaurito';"}
{"question": "Trova le fatture pagate in anticipo", "sql": "SELECT * FROM fatture WHERE data_pagamento < data_scadenza;"}
{"question": "Mostra i dipendenti di Milano con stipendio > 40000", "sql": "SELECT * FROM dipendenti WHERE citta = 'Milano' AND stipendio > 40000;"}
{"question": "Quali clienti hanno email personale (.com)", "sql": "SELECT * FROM clienti WHERE email LIKE '%.com';"}
{"question": "Trova i prodotti con margine negativo", "sql": "SELECT *, ((prezzo - costo) / costo * 100) as margine FROM prodotti WHERE prezzo < costo;"}
{"question": "Mostra gli ordini consegnati nell'ultima settimana", "sql": "SELECT * FROM ordini WHERE data_consegna >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"}
{"question": "Elenca i fornitori del settore alimentare", "sql": "SELECT * FROM fornitori WHERE settore = 'alimentare';"}
{"question": "Trova i clienti ente pubblico", "sql": "SELECT * FROM clienti WHERE tipo_cliente = 'ente_pubblico';"}
{"question": "Mostra le promozioni con sconto fisso", "sql": "SELECT * FROM promozioni WHERE sconto_fisso IS NOT NULL AND sconto_fisso > 0;"}
{"question": "Quali dipendenti lavorano nel magazzino?", "sql": "SELECT * FROM dipendenti WHERE posizione = 'magazziniere';"}
{"question": "Trova gli ordini con data di consegna mancante", "sql": "SELECT * FROM ordini WHERE data_consegna IS NULL;"}
{"question": "Mostra i prodotti della categoria libri con prezzo < 30", "sql": "SELECT * FROM prodotti WHERE categoria = 'libri' AND prezzo < 30;"}
{"question": "Elenca le recensioni con titolo", "sql": "SELECT * FROM recensioni WHERE titolo IS NOT NULL AND titolo != '';"}
{"question": "Trova i clienti con data di nascita mancante", "sql": "SELECT * FROM clienti WHERE data_nascita IS NULL;"}
{"question": "Mostra il fatturato giornaliero dell'ultimo mese", "sql": "SELECT data_ordine, SUM(totale) as fatturato FROM ordini WHERE data_ordine >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY data_ordine ORDER BY data_ordine;"}
{"question": "Quali sono i prodotti con recensioni eccellenti?", "sql": "SELECT DISTINCT p.* FROM prodotti p JOIN recensioni r ON p.id_prodotto = r.id_prodotto WHERE r.valutazione = 5;"}
{"question": "Trova gli ordini spediti nella regione Lazio", "sql": "SELECT * FROM ordini WHERE regione_consegna = 'Lazio';"}
{"question": "Mostra i dipendenti venditori con esperienza > 2 anni", "sql": "SELECT * FROM dipendenti WHERE posizione = 'venditore' AND data_assunzione <= DATE_SUB(CURDATE(), INTERVAL 2 YEAR);"}
{"question": "Elenca i prodotti con sottocategoria vuota", "sql": "SELECT * FROM prodotti WHERE sottocategoria IS NULL OR sottocategoria = '';"}
{"question": "Trova le fatture con importo > 1000 euro", "sql": "SELECT * FROM fatture WHERE importo_totale > 1000;"}
{"question": "Mostra i clienti sospesi", "sql": "SELECT * FROM clienti WHERE stato = 'sospeso';"}
{"question": "Quali ordini hanno richiesto più di 10 giorni per la consegna?", "sql": "SELECT * FROM ordini WHERE DATEDIFF(data_consegna, data_ordine) > 10;"}
{"question": "Trova i prodotti con fornitore 'TechnoItalia'", "sql": "SELECT * FROM prodotti WHERE fornitore = 'TechnoItalia';"}
{"question": "Mostra i movimenti di inventario", "sql": "SELECT * FROM magazzino WHERE tipo_movimento = 'inventario';"}
{"question": "Elenca i clienti con CAP di Roma (00xxx)", "sql": "SELECT * FROM clienti WHERE cap LIKE '00%';"}
{"question": "Trova le promozioni con importo minimo richiesto", "sql": "SELECT * FROM promozioni WHERE importo_minimo IS NOT NULL AND importo_minimo > 0;"}
{"question": "Mostra gli ordini degli ultimi 30 giorni", "sql": "SELECT * FROM ordini WHERE data_ordine >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"}
{"question": "Quali dipendenti guadagnano più del loro manager?", "sql": "SELECT d.nome, d.cognome, d.stipendio, m.nome as nome_manager, m.stipendio as stipendio_manager FROM dipendenti d JOIN dipendenti m ON d.manager_id = m.id_dipendente WHERE d.stipendio > m.stipendio;"}
{"question": "Trova i prodotti con valutazione media inferiore a 3", "sql": "SELECT p.nome, AVG(r.valutazione) as valutazione_media FROM prodotti p JOIN recensioni r ON p.id_prodotto = r.id_prodotto GROUP BY p.id_prodotto, p.nome HAVING AVG(r.valutazione) < 3;"}
{"question": "Mostra i clienti che hanno fatto ordini in più regioni", "sql": "SELECT c.nome, c.cognome, COUNT(DISTINCT o.regione_consegna) as regioni FROM clienti c JOIN ordini o ON c.id_cliente = o.id_cliente GROUP BY c.id_cliente, c.nome, c.cognome HAVING COUNT(DISTINCT o.regione_consegna) > 1;"}
{"question": "Elenca i fornitori senza valutazione", "sql": "SELECT * FROM fornitori WHERE valutazione IS NULL;"}
{"question": "Trova i prodotti con sconto attivo maggiore del 20%", "sql": "SELECT DISTINCT p.* FROM prodotti p JOIN promozioni pr ON p.categoria = pr.categoria_prodotti WHERE pr.stato = 'attiva' AND pr.sconto_percentuale > 20 AND CURDATE() BETWEEN pr.data_inizio AND pr.data_fine;"}