{"question": "Trova tutti i clienti di Firenze con ordini superiori a 200 euro", "sql": "SELECT DISTINCT c.* FROM clienti c JOIN ordini o ON c.id_cliente = o.id_cliente WHERE c.citta = 'Firenze' AND o.totale > 200;"}
{"question": "Mostra il numero di prodotti per ogni fornitore", "sql": "SELECT fornitore, COUNT(*) as numero_prodotti FROM prodotti GROUP BY fornitore;"}
{"question": "Elenca le fatture non pagate scadute da più di 30 giorni", "sql": "SELECT * FROM fatture WHERE stato != 'pagata' AND data_scadenza < DATE_SUB(CURDATE(), INTERVAL 30 DAY);"}
{"question": "Trova i dipendenti del marketing con stipendio > 35000", "sql": "SELECT * FROM dipendenti WHERE dipartimento = 'marketing' AND stipendio > 35000;"}
{"question": "Quali sono i 3 clienti che hanno speso di più quest'anno?", "sql": "SELECT c.nome, c.cognome, SUM(o.totale) as spesa_totale FROM clienti c JOIN ordini o ON c.id_cliente = o.id_cliente WHERE YEAR(o.data_ordine) = YEAR(CURDATE()) GROUP BY c.id_cliente, c.nome, c.cognome ORDER BY spesa_totale DESC LIMIT 3;"}
{"question": "Mostra i prodotti della categoria abbigliamento con giacenza > 20", "sql": "SELECT * FROM prodotti WHERE categoria = 'abbigliamento' AND giacenza > 20;"}
{"question": "Trova gli ordini consegnati in Emilia-Romagna", "sql": "SELECT * FROM ordini WHERE regione_consegna = 'Emilia-Romagna';"}
{"question": "Elenca i fornitori del settore tessile con partnership da meno di 2 anni", "sql": "SELECT * FROM fornitori WHERE settore = 'tessile' AND data_partnership > DATE_SUB(CURDATE(), INTERVAL 2 YEAR);"}
{"question": "Conta le recensioni per ogni valutazione", "sql": "SELECT valutazione, COUNT(*) as numero_recensioni FROM recensioni GROUP BY valutazione ORDER BY valutazione;"}
{"question": "Mostra i clienti della Puglia che non hanno mai fatto ordini", "sql": "SELECT c.* FROM clienti c LEFT JOIN ordini o ON c.id_cliente = o.id_cliente WHERE c.regione = 'Puglia' AND o.id_cliente IS NULL;"}
{"question": "Trova i prodotti con prezzo tra 50 e 150 euro ordinati per categoria", "sql": "SELECT * FROM prodotti WHERE prezzo BETWEEN 50 AND 150 ORDER BY categoria, prezzo;"}
{"question": "Quali dipendenti sono stati assunti nel 2023?", "sql": "SELECT * FROM dipendenti WHERE YEAR(data_assunzione) = 2023;"}
{"question": "Mostra le promozioni attive con sconto percentuale > 15%", "sql": "SELECT * FROM promozioni WHERE stato = 'attiva' AND sconto_percentuale > 15 AND CURDATE() BETWEEN data_inizio AND data_fine;"}
{"question": "Trova i movimenti di magazzino per danneggiamento", "sql": "SELECT * FROM magazzino WHERE motivo = 'danneggiamento';"}
{"question": "Elenca i clienti con email aziendale (.com o .it) ordinati per città", "sql": "SELECT * FROM clienti WHERE (email LIKE '%.com' OR email LIKE '%.it') ORDER BY citta;"}
{"question": "Mostra il valore totale degli ordini per ogni metodo di pagamento", "sql": "SELECT metodo_pagamento, SUM(totale) as valore_totale FROM ordini GROUP BY metodo_pagamento ORDER BY valore_totale DESC;"}
{"question": "Trova i prodotti mai recensiti", "sql": "SELECT p.* FROM prodotti p LEFT JOIN recensioni r ON p.id_prodotto = r.id_prodotto WHERE r.id_prodotto IS NULL;"}
{"question": "Quali ordini hanno richiesto più di una settimana per la spedizione?", "sql": "SELECT * FROM ordini WHERE DATEDIFF(data_consegna, data_ordine) > 7 AND stato = 'consegnato';"}
{"question": "Mostra i dipendenti senza dipendenti sotto di loro", "sql": "SELECT d1.* FROM dipendenti d1 LEFT JOIN dipendenti d2 ON d1.id_dipendente = d2.manager_id WHERE d2.manager_id IS NULL AND d1.stato = 'attivo';"}
{"question": "Trova le fatture emesse nell'ultimo trimestre", "sql": "SELECT * FROM fatture WHERE data_emissione >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH);"}
{"question": "Elenca i clienti che hanno fatto ordini sia a Milano che a Roma", "sql": "SELECT DISTINCT c.* FROM clienti c JOIN ordini o1 ON c.id_cliente = o1.id_cliente JOIN ordini o2 ON c.id_cliente = o2.id_cliente WHERE o1.citta_consegna = 'Milano' AND o2.citta_consegna = 'Roma';"}
{"question": "Mostra i prodotti con il margine più alto", "sql": "SELECT *, ((prezzo - costo) / costo * 100) as margine FROM prodotti WHERE costo > 0 ORDER BY margine DESC LIMIT 10;"}
{"question": "Trova i fornitori con rating medio superiore a 4.5", "sql": "SELECT * FROM fornitori WHERE valutazione > 4.5;"}
{"question": "Quali clienti hanno fatto ordini in tutti i mesi del 2024?", "sql": "SELECT c.nome, c.cognome FROM clienti c JOIN ordini o ON c.id_cliente = o.id_cliente WHERE YEAR(o.data_ordine) = 2024 GROUP BY c.id_cliente, c.nome, c.cognome HAVING COUNT(DISTINCT MONTH(o.data_ordine)) = 12;"}
{"question": "Mostra i dipendenti con lo stipendio più alto per dipartimento", "sql": "SELECT d1.* FROM dipendenti d1 WHERE d1.stipendio = (SELECT MAX(d2.stipendio) FROM dipendenti d2 WHERE d2.dipartimento = d1.dipartimento);"}
{"question": "Trova gli ordini con almeno 5 prodotti diversi", "sql": "SELECT o.* FROM ordini o JOIN dettagli_ordine d ON o.id_ordine = d.id_ordine GROUP BY o.id_ordine HAVING COUNT(DISTINCT d.id_prodotto) >= 5;"}
{"question": "Elenca i prodotti della categoria elettronica esauriti", "sql": "SELECT * FROM prodotti WHERE categoria = 'elettronica' AND (stato = 'esaurito' OR giacenza = 0);"}
{"question": "Mostra le recensioni negative con commento lungo", "sql": "SELECT * FROM recensioni WHERE valutazione <= 2 AND LENGTH(commento) > 100;"}
{"question": "Trova i clienti che hanno fatto il primo ordine nell'ultimo mese", "sql": "SELECT c.* FROM clienti c JOIN ordini o ON c.id_cliente = o.id_cliente WHERE o.data_ordine >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND o.data_ordine = (SELECT MIN(o2.data_ordine) FROM ordini o2 WHERE o2.id_cliente = c.id_cliente);"}
{"question": "Quali sono i prodotti più costosi per ogni categoria?", "sql": "SELECT p1.* FROM prodotti p1 WHERE p1.prezzo = (SELECT MAX(p2.prezzo) FROM prodotti p2 WHERE p2.categoria = p1.categoria);"}
{"question": "Mostra i dipendenti che lavorano nella stessa città dei clienti", "sql": "SELECT DISTINCT d.* FROM dipendenti d JOIN clienti c ON d.citta = c.citta;"}
{"question": "Trova le promozioni scadute negli ultimi 30 giorni", "sql": "SELECT * FROM promozioni WHERE data_fine BETWEEN DATE_SUB(CURDATE(), INTERVAL 30 DAY) AND CURDATE();"}
{"question": "Elenca i clienti con più di 3 ordini annullati", "sql": "SELECT c.nome, c.cognome, COUNT(o.id_ordine) as ordini_annullati FROM clienti c JOIN ordini o ON c.id_cliente = o.id_cliente WHERE o.stato = 'annullato' GROUP BY c.id_cliente, c.nome, c.cognome HAVING COUNT(o.id_ordine) > 3;"}
{"question": "Mostra il trend mensile delle vendite per la categoria sport", "sql": "SELECT MONTH(o.data_ordine) as mese, SUM(d.subtotale) as vendite FROM ordini o JOIN dettagli_ordine d ON o.id_ordine = d.id_ordine JOIN prodotti p ON d.id_prodotto = p.id_prodotto WHERE p.categoria = 'sport' AND YEAR(o.data_ordine) = YEAR(CURDATE()) GROUP BY MONTH(o.data_ordine) ORDER BY mese;"}
{"question": "Trova i fornitori che forniscono prodotti in più categorie", "sql": "SELECT fornitore, COUNT(DISTINCT categoria) as categorie FROM prodotti GROUP BY fornitore HAVING COUNT(DISTINCT categoria) > 1;"}
{"question": "Quali ordini hanno un valore unitario medio superiore a 100 euro?", "sql": "SELECT o.*, AVG(d.prezzo_unitario) as prezzo_medio FROM ordini o JOIN dettagli_ordine d ON o.id_ordine = d.id_ordine GROUP BY o.id_ordine HAVING AVG(d.prezzo_unitario) > 100;"}
{"question": "Mostra i clienti che hanno cambiato regione di consegna", "sql": "SELECT DISTINCT c.* FROM clienti c JOIN ordini o ON c.id_cliente = o.id_cliente WHERE c.regione != o.regione_consegna;"}
{"question": "Trova i dipendenti con anzianità aziendale superiore a 5 anni", "sql": "SELECT *, DATEDIFF(CURDATE(), data_assunzione) / 365 as anni_servizio FROM dipendenti WHERE DATEDIFF(CURDATE(), data_assunzione) / 365 > 5;"}
{"question": "Elenca le fatture con IVA calcolata incorrettamente (IVA ≠ 22% dell'imponibile)", "sql": "SELECT *, (importo_totale - iva) as imponibile, ((importo_totale - iva) * 0.22) as iva_corretta FROM fatture WHERE ABS(iva - ((importo_totale - iva) * 0.22)) > 0.01;"}
{"question": "Mostra i prodotti con giacenza critica (< 5) ordinati per categoria", "sql": "SELECT * FROM prodotti WHERE giacenza < 5 AND stato = 'disponibile' ORDER BY categoria, giacenza;"}
{"question": "Trova i clienti VIP (spesa totale > 10000 euro)", "sql": "SELECT c.nome, c.cognome, SUM(o.totale) as spesa_totale FROM clienti c JOIN ordini o ON c.id_cliente = o.id_cliente GROUP BY c.id_cliente, c.nome, c.cognome HAVING SUM(o.totale) > 10000 ORDER BY spesa_totale DESC;"}
{"question": "Quali ordini hanno prodotti di categorie diverse?", "sql": "SELECT o.* FROM ordini o JOIN dettagli_ordine d ON o.id_ordine = d.id_ordine JOIN prodotti p ON d.id_prodotto = p.id_prodotto GROUP BY o.id_ordine HAVING COUNT(DISTINCT p.categoria) > 1;"}
{"question": "Mostra la distribuzione geografica dei clienti per regione", "sql": "SELECT regione, COUNT(*) as numero_clienti FROM clienti GROUP BY regione ORDER BY numero_clienti DESC;"}
{"question": "Trova i prodotti con recensioni contrastanti (sia 1 che 5 stelle)", "sql": "SELECT DISTINCT p.* FROM prodotti p JOIN recensioni r1 ON p.id_prodotto = r1.id_prodotto JOIN recensioni r2 ON p.id_prodotto = r2.id_prodotto WHERE r1.valutazione = 1 AND r2.valutazione = 5;"}
{"question": "Elenca i dipendenti che guadagnano sopra la media del loro dipartimento", "sql": "SELECT d1.* FROM dipendenti d1 WHERE d1.stipendio > (SELECT AVG(d2.stipendio) FROM dipendenti d2 WHERE d2.dipartimento = d1.dipartimento);"}
{"question": "Mostra gli ordini con tempo di consegna record (≤ 2 giorni)", "sql": "SELECT * FROM ordini WHERE DATEDIFF(data_consegna, data_ordine) <= 2 AND stato = 'consegnato';"}
{"question": "Trova i fornitori che non hanno prodotti attivi nel catalogo", "sql": "SELECT DISTINCT f.* FROM fornitori f LEFT JOIN prodotti p ON f.nome_azienda = p.fornitore WHERE p.fornitore IS NULL OR p.stato != 'disponibile';"}
{"question": "Quali clienti hanno fatto ordini consecutivi nell'ultima settimana?", "sql": "SELECT c.nome, c.cognome, COUNT(o.id_ordine) as ordini_settimana FROM clienti c JOIN ordini o ON c.id_cliente = o.id_cliente WHERE o.data_ordine >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) GROUP BY c.id_cliente, c.nome, c.cognome HAVING COUNT(o.id_ordine) > 1;"}
{"question": "Mostra i prodotti con il rapporto qualità-prezzo migliore", "sql": "SELECT p.*, AVG(r.valutazione) as valutazione_media, (AVG(r.valutazione) / p.prezzo * 100) as rapporto_qp FROM prodotti p JOIN recensioni r ON p.id_prodotto = r.id_prodotto GROUP BY p.id_prodotto ORDER BY rapporto_qp DESC LIMIT 10;"}
{"question": "Trova le fatture emesse e pagate nello stesso giorno", "sql": "SELECT * FROM fatture WHERE data_emissione = data_pagamento;"}
{"question": "Elenca i movimenti di magazzino anomali (grandi quantità)", "sql": "SELECT * FROM magazzino WHERE ABS(quantita) > 100 ORDER BY data_movimento DESC;"}